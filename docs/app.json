[{"name": "app.py", "content": "# These are all of the inputs you need to make your outputs work\nimport plotly.express as px\nfrom shiny.express import input, ui\nfrom shinywidgets import render_plotly\nfrom shinyswatch import theme\n\n# This package provides the Palmer Penguins dataset but you have to load it before you can use it\nfrom palmerpenguins import (\n    load_penguins,\n)\nfrom shiny import reactive, render, req\nimport seaborn as sns\nimport pandas as pd\n\n# Use the built-in function to load the Palmer Penguins dataset\npenguins_df = load_penguins()\n\n# This creates a title for your visual pane\nui.page_opts(title=\"Brittany's Data About Spectacular Penguins\", fillable=False)\n\n#This will change the look of your UI, there are so many to try!\ntheme.yeti()\n\n# This adds a Shiny UI sidebar for user interaction. We will be adding a dropdown, numeric, and slider option\nwith ui.sidebar(open=\"open\"):\n    # This will add a 2nd level header to the sidebar\n    ui.h2(\"Sidebar\")\n    ui.input_checkbox_group(\n        \"selected_species_list\",\n        \"Select Species\",\n        [\"Adelie\", \"Gentoo\", \"Chinstrap\"],\n        selected=[\"Adelie\"],\n        inline=True,\n    )\n\n    ui.input_selectize(\n        \"selected_attribute\",\n        \"Select Attribute\",\n        [\"bill_length_mm\", \"bill_depth_mm\", \"flipper_length_mm\", \"body_mass_g\"],\n    )\n    ui.input_slider(\n        \"seaborn_bin_count\",\n        \"Seaborn Bin Count\",\n        1,\n        100,\n        40,\n    )\n    ui.input_numeric(\"plotly_bin_count\", \"Plotly Bin Count\", 40)\n    ui.input_checkbox_group(\n        \"selected_island_list\",\n        \"Select Island\",\n        penguins_df[\"island\"].unique().tolist(),\n        selected=penguins_df[\"island\"].unique().tolist(),\n        inline=True,\n    )\n\n    # This will create a line to visually separate the widgets above and below it in the sidebar\n    ui.hr()\n    # This will add in a hyperlink to another website\n    ui.a(\n        \"Brittany's GitHub Link to P3\",\n        href=\"https://github.com/Bdowdle4/cintel-03-reactive\",\n        target=\"_blank\",\n    )\n\n# This will organize the Data Table and Data Grid into a Tabset with pill navigation to be more visually organized\nwith ui.navset_pill(id=\"tab\"):\n    with ui.nav_panel(\"Data Table\"):\n\n        @render.data_frame\n        def penguin_datatable():\n            return render.DataTable(filtered_data())\n\n    with ui.nav_panel(\"Data Grid\"):\n\n        @render.data_frame\n        def penguin_datagrid():\n            return render.DataGrid(filtered_data())\n\n\n# This will organize the Plotly Histogram, Seaborn Histogram, and the Plotly scatterplot into a card to separate from the above \"Data's\" amd be easier to see\nwith ui.navset_card_pill(id=\"tab1\"):\n    # These will connect the dropdown in the sidebar to the histogram to be interactive\n    with ui.nav_panel(\"Plotly Histogram\"):\n\n        @render_plotly\n        def plotly_histogram():\n            plotly_hist = px.histogram(\n                data_frame=filtered_data(),\n                x=input.selected_attribute(),\n                nbins=input.plotly_bin_count(),\n                color=\"species\",\n            ).update_layout(\n                title=\"Plotly Penguins Data\",\n                xaxis_title=\"Selected Attribute\",\n                yaxis_title=\"Count\",\n            )\n            return plotly_hist\n\n    # These will connect the numeric in the sidebar to the histogram to be interactive\n    with ui.nav_panel(\"Seaborn Histogram\"):\n\n        @render.plot\n        def seaborn_histogram():\n            seaborn_hist = sns.histplot(\n                data=filtered_data(),\n                x=input.selected_attribute(),\n                bins=input.seaborn_bin_count(),\n            )\n            seaborn_hist.set_title(\"Seaborn Penguin Data\")\n            seaborn_hist.set_xlabel(\"Selected Attribute\")\n            seaborn_hist.set_ylabel(\"Count\")\n\n    # These will connect the checkboxes in the sidebar to the scatterplot to be interactive\n    with ui.nav_panel(\"Plotly Scatterplot\"):\n        ui.card_header(\"Plotly Scatterplot: Species\")\n\n        # Add facet_col parameter to separate scatterplots by island\n        @render_plotly\n        def plotly_scatterplot():\n            plotly_scatter = px.scatter(\n                filtered_data(),\n                x=\"bill_depth_mm\",\n                y=\"bill_length_mm\",\n                color=\"species\",\n                facet_col=\"island\",\n                size_max=8,\n                labels={\n                    \"bill_depth_mm\": \"Bill Depth (mm)\",\n                    \"bill_length_mm\": \"Bill Length(mm)\",\n                },\n            )\n            return plotly_scatter\n\n\n# Add a reactive calculation to filter the data\n# By decorating the function with @reactive, we can use the function to filter the data\n# The function will be called whenever an input functions used to generate that output changes.\n# Any output that depends on the reactive function (e.g., filtered_data()) will be updated when the data changes.\n\n\n@reactive.calc\ndef filtered_data():\n    return penguins_df[\n        (penguins_df[\"species\"].isin(input.selected_species_list()))\n        & (penguins_df[\"island\"].isin(input.selected_island_list()))\n    ]\n", "type": "text"}]